{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Desktop/sr1/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.clickInLoad = () => {\n      document.getElementById(\"inputUpload\").click();\n      let UpdFile = document.getElementById(\"inputUpload\");\n      UpdFile.addEventListener('change', this.handleFileSelect, false);\n    };\n\n    this.handleFileChosen = file => {\n      let fileReader = new FileReader();\n\n      fileReader.onloadend = function (e) {\n        console.log(\"file\", file);\n        var content = fileReader.result;\n        console.log(\"result\", content); // let view = new Int8Array(content);\n        // let contentString = '';\n        // for(var i=0;i<view.length;i++){\n        //   if(i==0){\n        //     contentString = contentString.concat(view[i].toString())\n        //   }else{\n        //     contentString = contentString.concat(\" \" + view[i].toString())\n        //   }   \n        // }\n        // console.log(view);\n        // console.log(\"content\",contentString)\n\n        console.log(\"fileReader\", fileReader);\n        /* encrypt */\n\n        var key = \"my passphrase;\"; // var contentEncrypted = aes256.encrypt(key, contentString);\n\n        var contentEncrypted = aes256.encrypt(key, content);\n        var nameEncrypted = aes256.encrypt(key, file.name); //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n        //\n\n        /* create file encrypt */\n\n        var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n        console.log(\"fileEncrypted\", fileEncrypted);\n        var formData = new FormData(); //formData.set('files', files);\n\n        formData.append('files', fileEncrypted);\n        fetch('api/file', {\n          // Your POST endpoint\n          method: 'POST',\n          body: formData // This is your file object\n\n        }).catch(function () {\n          console.log(\"error in post data\");\n        });\n      };\n\n      fileReader.readAsBinaryString(file); //fileReader.readAsArrayBuffer(file);\n      //codificar a base 64 \n    };\n\n    this.callFile = async () => {\n      const response = await fetch('/api/getFile');\n      const body = await response.blob();\n      if (response.status !== 200) throw Error(body.message);\n      let key = \"my passphrase;\";\n      let fileReader = new FileReader();\n\n      fileReader.onloadend = function (e) {\n        let content = aes256.decrypt(key, fileReader.result);\n        console.log(\"contentdes\", content);\n        var fileDown = [];\n        var filename = \"pruba.pdf\";\n        fileDown[0] = content;\n        fileDown[1] = filename;\n        fetch('api/postForDownload', {\n          // Your POST endpoint\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"file\": {\n              \"content\": content,\n              \"name\": filename\n            }\n          }) // This is your file object\n\n        }).catch(function () {\n          console.log(\"error in post data\");\n        }); // download(content,filename,\"js\");\n\n        function download(data, filename, type) {\n          var file = new Blob([data], {\n            type: type\n          });\n          if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);else {\n            // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n              document.body.removeChild(a);\n              window.URL.revokeObjectURL(url);\n            }, 0);\n          }\n        }\n      };\n\n      fileReader.readAsText(body);\n    };\n\n    this.download = (filename, text) => {\n      var element = document.createElement('a');\n      element.setAttribute('href', encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    };\n\n    this.handleFileSelect = evt => {\n      if (evt.target.files.length > 0) {\n        var files = evt.target.files; // FileList object\n        // Loop through the FileList and render image files as thumbnails.\n        // for (var i = 0;i<files.length; i++) {\n        //   this.handleFileChosen(files[i])\n        // }\n\n        this.postContentFile(files);\n      }\n    };\n\n    this.postContentFile = async files => {\n      let flagError = false;\n      var formData = new FormData(); //formData.set('files', files);\n\n      formData.append('files', files[0]);\n      fetch('api/postContentFile', {\n        // Your POST endpoint\n        method: 'POST',\n        body: formData // This is your file object\n\n      }).catch(function () {\n        console.log(\"error in post data\");\n        flagError = true;\n      });\n      this.getContentFile(files, flagError);\n    };\n\n    this.getContentFile = async (files, flagError) => {\n      const response = await fetch('api/getContentFile?name=' + files[0].name).catch(function () {\n        console.log(\"error in get files\");\n        flagError = true;\n      });\n\n      if (!flagError) {\n        let json = await response.json();\n        setTimeout(() => {\n          var filename = files[0].name;\n          console.log(\"json\", json);\n          var key = \"my passphrase;\"; // var contentEncrypted = aes256.encrypt(key, contentString);\n\n          var contentEncrypted = aes256.encrypt(key, json);\n          var nameEncrypted = aes256.encrypt(key, filename); //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n          //\n\n          /* create file encrypt */\n\n          var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n          console.log(\"fileEncrypted\", fileEncrypted);\n          var formData = new FormData(); //formData.set('files', files);\n\n          formData.append('files', fileEncrypted);\n          fetch('api/file', {\n            // Your POST endpoint\n            method: 'POST',\n            body: formData // This is your file object\n\n          });\n        }, 500);\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Learn React\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, this.state.responseToPost), React.createElement(Button, {\n      onClick: this.clickInLoad,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"primary\"), ' ', React.createElement(\"input\", {\n      type: \"file\",\n      id: \"inputUpload\",\n      name: \"files[]\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.callFile,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"call file\"), ' ');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/thomas/Desktop/sr1/client/src/App.js"],"names":["React","Component","Button","aes256","require","App","state","response","post","responseToPost","clickInLoad","document","getElementById","click","UpdFile","addEventListener","handleFileSelect","handleFileChosen","file","fileReader","FileReader","onloadend","e","console","log","content","result","key","contentEncrypted","encrypt","nameEncrypted","name","fileEncrypted","File","formData","FormData","append","fetch","method","body","catch","readAsBinaryString","callFile","blob","status","Error","message","decrypt","fileDown","filename","headers","JSON","stringify","download","data","type","Blob","window","navigator","msSaveOrOpenBlob","a","createElement","url","URL","createObjectURL","href","appendChild","setTimeout","removeChild","revokeObjectURL","readAsText","text","element","setAttribute","encodeURIComponent","style","display","evt","target","files","length","postContentFile","flagError","getContentFile","json","callApi","handleSubmit","preventDefault","setState","componentDidMount","render","logo","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nimport logo from './logo.svg';\nimport './App.css';\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: ''\n  };\n\n  componentDidMount() {\n\n  }\n  clickInLoad = () => {\n    document.getElementById(\"inputUpload\").click();\n    let UpdFile = document.getElementById(\"inputUpload\");\n    UpdFile.addEventListener('change',this.handleFileSelect, false);\n  }\n  \n  handleFileChosen = (file) => {\n    let fileReader = new FileReader();\n    fileReader.onloadend = function (e){\n      console.log(\"file\",file);\n     \n      var content = fileReader.result;\n      console.log(\"result\",content)\n      // let view = new Int8Array(content);\n      // let contentString = '';\n      // for(var i=0;i<view.length;i++){\n      //   if(i==0){\n      //     contentString = contentString.concat(view[i].toString())\n      //   }else{\n      //     contentString = contentString.concat(\" \" + view[i].toString())\n      //   }   \n      // }\n\n      // console.log(view);\n\n      // console.log(\"content\",contentString)\n      console.log(\"fileReader\",fileReader)\n      /* encrypt */\n      var key = \"my passphrase;\"\n      // var contentEncrypted = aes256.encrypt(key, contentString);\n      var contentEncrypted = aes256.encrypt(key, content)\n      var nameEncrypted = aes256.encrypt(key, file.name);\n      //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n      //\n      /* create file encrypt */\n      var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n      console.log(\"fileEncrypted\",fileEncrypted);\n      var formData = new FormData();\n      //formData.set('files', files);\n      formData.append('files', fileEncrypted);\n      fetch('api/file', { // Your POST endpoint\n        method: 'POST',\n        body: formData // This is your file object\n      })\n      .catch(function() {\n        console.log(\"error in post data\");\n      });\n    }\n    fileReader.readAsBinaryString(file);\n    //fileReader.readAsArrayBuffer(file);\n    //codificar a base 64 \n  }\n\n   callFile = async () => {\n    const response = await fetch('/api/getFile');\n    const body = await response.blob();\n    if (response.status !== 200) throw Error(body.message);\n    let key = \"my passphrase;\"\n    let fileReader = new FileReader();\n \n    fileReader.onloadend = function (e){\n\n      let content = aes256.decrypt(key,fileReader.result);\n      console.log(\"contentdes\", content);\n      var fileDown =[];\n      var filename = \"pruba.pdf\";\n      fileDown[0]=content;\n      fileDown[1]=filename;\n      \n      fetch('api/postForDownload', { // Your POST endpoint\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ \"file\": {\n          \"content\" : content,\n          \"name\" : filename\n        }}) // This is your file object\n        }).catch(function() {\n          console.log(\"error in post data\");\n        });\n     // download(content,filename,\"js\");\n     \n      function download(data, filename, type) {\n        var file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                    url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function() {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);  \n            }, 0); \n        }\n    \n      }\n\n    }\n    fileReader.readAsText(body);\n  };\n\n  download = (filename, text) => {\n    var element = document.createElement('a');\n    element.setAttribute('href', encodeURIComponent(text));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n  handleFileSelect = (evt) => {\n    if(evt.target.files.length>0){\n      var files = evt.target.files; // FileList object\n\n      // Loop through the FileList and render image files as thumbnails.\n      // for (var i = 0;i<files.length; i++) {\n      //   this.handleFileChosen(files[i])\n      // }\n      \n      this.postContentFile(files);\n      \n    }\n  }\n  postContentFile = async (files) =>{\n    let flagError=false;\n    \n      var formData = new FormData();\n      //formData.set('files', files);\n      formData.append('files', files[0]);\n      fetch('api/postContentFile', { // Your POST endpoint\n      method: 'POST',\n      body: formData // This is your file object\n      }).catch(function() {\n        console.log(\"error in post data\");\n        flagError=true;\n      });\n    \n    this.getContentFile(files,flagError);\n  }\n\n  getContentFile = async (files,flagError) =>{\n    const response = await fetch('api/getContentFile?name='+files[0].name).catch(function() {\n\t\t\tconsole.log(\"error in get files\");\n\t\t\tflagError=true;\n\t\t\t});\n\t\t\tif(!flagError){\n\t\t\tlet json = await response.json();\n\n\t\t\t\tsetTimeout(() => {\n          var filename = files[0].name;\n          console.log(\"json\",json)\n\n          var key = \"my passphrase;\"\n          // var contentEncrypted = aes256.encrypt(key, contentString);\n          var contentEncrypted = aes256.encrypt(key, json)\n          var nameEncrypted = aes256.encrypt(key, filename);\n          //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n          //\n          /* create file encrypt */\n          var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n          console.log(\"fileEncrypted\",fileEncrypted);\n          var formData = new FormData();\n          //formData.set('files', files);\n          formData.append('files', fileEncrypted);\n          fetch('api/file', { // Your POST endpoint\n            method: 'POST',\n            body: formData // This is your file object\n          })\n\n\t\t\t\t}, 500);\n\t\t\t}\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n\n      {/* file */}\n      <Button onClick={this.clickInLoad} color=\"primary\">primary</Button>{' '}\n      <input type=\"file\" id=\"inputUpload\" name=\"files[]\" multiple/> \n\n      <Button onClick={this.callFile} color=\"primary\">call file</Button>{' '}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}