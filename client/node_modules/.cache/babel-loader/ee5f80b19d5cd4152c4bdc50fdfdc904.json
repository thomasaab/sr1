{"ast":null,"code":"/* Copyright (c) 2012-2014 LevelUP contributors\n * See list at <https://github.com/rvagg/node-levelup#contributing>\n * MIT License\n * <https://github.com/rvagg/node-levelup/blob/master/LICENSE.md>\n */\nvar util = require('./util'),\n    WriteError = require('./errors').WriteError,\n    getOptions = util.getOptions,\n    dispatchError = util.dispatchError;\n\nfunction Batch(levelup) {\n  this._levelup = levelup;\n  this.batch = levelup.db.batch();\n  this.ops = [];\n}\n\nBatch.prototype.put = function (key_, value_, options) {\n  options = getOptions(this._levelup, options);\n  var key = util.encodeKey(key_, options),\n      value = util.encodeValue(value_, options);\n\n  try {\n    this.batch.put(key, value);\n  } catch (e) {\n    throw new WriteError(e);\n  }\n\n  this.ops.push({\n    type: 'put',\n    key: key,\n    value: value\n  });\n  return this;\n};\n\nBatch.prototype.del = function (key_, options) {\n  options = getOptions(this._levelup, options);\n  var key = util.encodeKey(key_, options);\n\n  try {\n    this.batch.del(key);\n  } catch (err) {\n    throw new WriteError(err);\n  }\n\n  this.ops.push({\n    type: 'del',\n    key: key\n  });\n  return this;\n};\n\nBatch.prototype.clear = function () {\n  try {\n    this.batch.clear();\n  } catch (err) {\n    throw new WriteError(err);\n  }\n\n  this.ops = [];\n  return this;\n};\n\nBatch.prototype.write = function (callback) {\n  var levelup = this._levelup,\n      ops = this.ops;\n\n  try {\n    this.batch.write(function (err) {\n      if (err) return dispatchError(levelup, new WriteError(err), callback);\n      levelup.emit('batch', ops);\n      if (callback) callback();\n    });\n  } catch (err) {\n    throw new WriteError(err);\n  }\n};\n\nmodule.exports = Batch;","map":null,"metadata":{},"sourceType":"script"}