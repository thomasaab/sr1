{"ast":null,"code":"/**\n * read-file <https://github.com/assemble/read-file>\n *\n * Copyright (c) 2014, 2015 Jon Schlinkert.\n * Licensed under the MIT license.\n */\nvar fs = require('fs');\n\nfunction read(fp, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (typeof cb !== 'function') {\n    throw new TypeError('read-file async expects a callback function.');\n  }\n\n  if (typeof fp !== 'string') {\n    cb(new TypeError('read-file async expects a string.'));\n  }\n\n  fs.readFile(fp, opts, function (err, buffer) {\n    if (err) return cb(err);\n    cb(null, normalize(buffer, opts));\n  });\n}\n\nread.sync = function (fp, opts) {\n  if (typeof fp !== 'string') {\n    throw new TypeError('read-file sync expects a string.');\n  }\n\n  try {\n    return normalize(fs.readFileSync(fp, opts), opts);\n  } catch (err) {\n    err.message = 'Failed to read \"' + fp + '\": ' + err.message;\n    throw new Error(err);\n  }\n};\n\nfunction normalize(str, opts) {\n  str = stripBom(str);\n\n  if (typeof opts === 'object' && opts.normalize === true) {\n    return String(str).replace(/\\r\\n|\\n/g, '\\n');\n  }\n\n  return str;\n}\n\nfunction stripBom(str) {\n  return typeof str === 'string' && str.charAt(0) === '\\uFEFF' ? str.slice(1) : str;\n}\n/**\n * Expose `read`\n */\n\n\nmodule.exports = read;","map":null,"metadata":{},"sourceType":"script"}