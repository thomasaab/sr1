{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar next = process.nextTick;\n\nvar SubDb = require('./sub');\n\nvar Batch = require('./batch');\n\nvar fixRange = require('level-fix-range');\n\nvar Hooks = require('level-hooks');\n\nmodule.exports = function (_db, options) {\n  function DB() {}\n\n  DB.prototype = _db;\n  var db = new DB();\n  if (db.sublevel) return db;\n  options = options || {}; //use \\xff (255) as the seperator,\n  //so that sections of the database will sort after the regular keys\n\n  var sep = options.sep = options.sep || '\\xff';\n  db._options = options;\n  Hooks(db);\n  db.sublevels = {};\n\n  db.sublevel = function (prefix, options) {\n    if (db.sublevels[prefix]) return db.sublevels[prefix];\n    return new SubDb(db, prefix, options || this._options);\n  };\n\n  db.methods = {};\n\n  db.prefix = function (key) {\n    return '' + (key || '');\n  };\n\n  db.pre = function (range, hook) {\n    if (!hook) hook = range, range = {\n      max: sep\n    };\n    return db.hooks.pre(range, hook);\n  };\n\n  db.post = function (range, hook) {\n    if (!hook) hook = range, range = {\n      max: sep\n    };\n    return db.hooks.post(range, hook);\n  };\n\n  function safeRange(fun) {\n    return function (opts) {\n      opts = opts || {};\n      opts = fixRange(opts);\n      if (opts.reverse) opts.start = opts.start || sep;else opts.end = opts.end || sep;\n      return fun.call(db, opts);\n    };\n  }\n\n  db.readStream = db.createReadStream = safeRange(db.createReadStream);\n  db.keyStream = db.createKeyStream = safeRange(db.createKeyStream);\n  db.valuesStream = db.createValueStream = safeRange(db.createValueStream);\n  var batch = db.batch;\n\n  db.batch = function (changes, opts, cb) {\n    if (!Array.isArray(changes)) return new Batch(db);\n    changes.forEach(function (e) {\n      if (e.prefix) {\n        if ('function' === typeof e.prefix.prefix) e.key = e.prefix.prefix(e.key);else if ('string' === typeof e.prefix) e.key = e.prefix + e.key;\n      }\n    });\n    batch.call(db, changes, opts, cb);\n  };\n\n  return db;\n};","map":null,"metadata":{},"sourceType":"script"}