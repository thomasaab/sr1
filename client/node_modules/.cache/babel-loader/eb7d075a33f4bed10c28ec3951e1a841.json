{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Desktop/sr1/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './App.css';\nimport CheckboxTree from 'react-checkbox-tree';\nimport File from \"./File\";\n\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      childrens: [],\n      checked: [],\n      expanded: [],\n      nodes: [{\n        value: 'mars',\n        label: 'Mars',\n        ruta: \"hola\",\n        children: [{\n          value: 'phobos',\n          label: 'Phobos'\n        }, {\n          value: 'deimos',\n          label: 'Deimos',\n          children: [{\n            value: 'phobos',\n            label: 'Phobos'\n          }, {\n            value: 'deim',\n            label: 'Deim',\n            children: [{\n              value: 'phobos',\n              label: 'Phobos'\n            }, {\n              value: 'deimo',\n              label: 'Deimos'\n            }]\n          }]\n        }]\n      }]\n    };\n\n    this.clickInLoad = () => {\n      document.getElementById(\"inputUpload\").click();\n      let UpdFile = document.getElementById(\"inputUpload\");\n      UpdFile.addEventListener('change', this.handleFileSelect, false);\n    };\n\n    this.callFile = async () => {\n      const response = await fetch('/api/getFile');\n      const body = await response.blob();\n      if (response.status !== 200) throw Error(body.message);\n      let key = \"my passphrase;\";\n      let fileReader = new FileReader();\n\n      fileReader.onloadend = function (e) {\n        let content = aes256.decrypt(key, fileReader.result);\n        console.log(\"contentdes\", content);\n        var fileDown = [];\n        var filename = \"pruba.pdf\";\n        fileDown[0] = content;\n        fileDown[1] = filename;\n        fetch('api/postForDownload', {\n          // Your POST endpoint\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"file\": {\n              \"content\": content,\n              \"name\": filename\n            }\n          }) // This is your file object\n\n        }).catch(function () {\n          console.log(\"error in post data\");\n        }); // download(content,filename,\"js\");\n\n        function download(data, filename, type) {\n          var file = new Blob([data], {\n            type: type\n          });\n          if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);else {\n            // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n              document.body.removeChild(a);\n              window.URL.revokeObjectURL(url);\n            }, 0);\n          }\n        }\n      };\n\n      fileReader.readAsText(body);\n    };\n\n    this.handleFileSelect = evt => {\n      if (evt.target.files.length > 0) {\n        var files = evt.target.files; // FileList object\n\n        console.log(\"llamo\");\n        this.postContentFile(files);\n      }\n    };\n\n    this.postContentFile = async files => {\n      let flagError = false;\n      var formData = new FormData(); //formData.set('files', files);\n\n      console.log(\"entro\", formData);\n      formData.append('files', files[0]);\n      fetch('api/postContentFile', {\n        // Your POST endpoint\n        method: 'POST',\n        body: formData // This is your file object\n\n      }).catch(function () {\n        console.log(\"error in post data\");\n        flagError = true;\n      });\n      this.getContentFile(files, flagError);\n    };\n\n    this.getContentFile = async (files, flagError) => {\n      const response = await fetch('api/getContentFile?name=' + files[0].name).catch(function () {\n        console.log(\"error in get files\");\n        flagError = true;\n      });\n\n      if (!flagError) {\n        let json = await response.json();\n        setTimeout(() => {\n          var filename = files[0].name;\n          console.log(\"json\", json);\n          var key = \"my passphrase;\"; // var contentEncrypted = aes256.encrypt(key, contentString);\n\n          var contentEncrypted = aes256.encrypt(key, json);\n          var nameEncrypted = aes256.encrypt(key, filename); //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n          //\n\n          /* create file encrypt */\n\n          var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n          console.log(\"fileEncrypted\", fileEncrypted);\n          var formData = new FormData(); //formData.set('files', files);\n\n          formData.append('files', fileEncrypted);\n          fetch('api/file', {\n            // Your POST endpoint\n            method: 'POST',\n            body: formData // This is your file object\n\n          });\n        }, 500);\n      }\n    };\n\n    this.selected = clicked => {\n      console.log(clicked);\n\n      if (clicked.isParent) {\n        console.log(clicked.children);\n        this.setState({\n          childrens: clicked.children\n        });\n      } else {\n        console.log(\"hoja\");\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const children = [];\n    let auxChildren = this.state.childrens;\n\n    for (var i = 0; i < auxChildren.length; i += 1) {\n      console.log(auxChildren[i]);\n      children.push(React.createElement(File, {\n        key: i,\n        number: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }));\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.clickInLoad,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"primary\"), ' ', React.createElement(\"input\", {\n      type: \"file\",\n      id: \"inputUpload\",\n      name: \"files[]\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.callFile,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"call file\"), ' ', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(CheckboxTree, {\n      nodes: this.state.nodes,\n      checked: this.state.checked,\n      expanded: this.state.expanded,\n      onCheck: checked => this.setState({\n        checked\n      }),\n      onExpand: expanded => this.setState({\n        expanded\n      }),\n      onClick: clicked => this.selected(clicked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/thomas/Desktop/sr1/client/src/App.js"],"names":["React","Component","Button","CheckboxTree","File","aes256","require","App","state","childrens","checked","expanded","nodes","value","label","ruta","children","clickInLoad","document","getElementById","click","UpdFile","addEventListener","handleFileSelect","callFile","response","fetch","body","blob","status","Error","message","key","fileReader","FileReader","onloadend","e","content","decrypt","result","console","log","fileDown","filename","method","headers","JSON","stringify","catch","download","data","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","createElement","url","URL","createObjectURL","href","appendChild","setTimeout","removeChild","revokeObjectURL","readAsText","evt","target","files","length","postContentFile","flagError","formData","FormData","append","getContentFile","name","json","contentEncrypted","encrypt","nameEncrypted","fileEncrypted","selected","clicked","isParent","setState","componentDidMount","render","auxChildren","i","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport './App.css';\nimport CheckboxTree from 'react-checkbox-tree';\nimport File from \"./File\"\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  state = {\n    childrens: [],\n    checked: [],\n    expanded: [],\n    nodes : [{\n      value: 'mars',\n      label: 'Mars',\n      ruta: \"hola\",\n      children: [\n        { \n        value: 'phobos', \n        label: 'Phobos' \n        },\n        { \n         value: 'deimos', \n         label: 'Deimos' ,\n         children: [\n          { \n          value: 'phobos', \n          label: 'Phobos' \n          },\n          { \n           value: 'deim', \n           label: 'Deim' ,\n           children: [\n            { \n            value: 'phobos', \n            label: 'Phobos' \n            },\n            { \n             value: 'deimo', \n             label: 'Deimos' ,\n             \n            },\n          ],\n           \n          },\n        ],\n        },\n      ],\n    }]\n  };\n\n  componentDidMount() {\n  }\n\n  clickInLoad = () => {\n    document.getElementById(\"inputUpload\").click();\n    let UpdFile = document.getElementById(\"inputUpload\");\n    UpdFile.addEventListener('change',this.handleFileSelect, false);\n  }\n\n  callFile = async () => {\n    const response = await fetch('/api/getFile');\n    const body = await response.blob();\n    if (response.status !== 200) throw Error(body.message);\n    let key = \"my passphrase;\"\n    let fileReader = new FileReader();\n \n    fileReader.onloadend = function (e){\n\n      let content = aes256.decrypt(key,fileReader.result);\n      console.log(\"contentdes\", content);\n      var fileDown =[];\n      var filename = \"pruba.pdf\";\n      fileDown[0]=content;\n      fileDown[1]=filename;\n      \n      fetch('api/postForDownload', { // Your POST endpoint\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ \"file\": {\n          \"content\" : content,\n          \"name\" : filename\n        }}) // This is your file object\n        }).catch(function() {\n          console.log(\"error in post data\");\n        });\n     // download(content,filename,\"js\");\n     \n      function download(data, filename, type) {\n        var file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                    url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function() {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);  \n            }, 0); \n        }\n    \n      }\n\n    }\n    fileReader.readAsText(body);\n  };\n\n  handleFileSelect = (evt) => {\n    if(evt.target.files.length>0){\n      var files = evt.target.files; // FileList object\n      console.log(\"llamo\")\n      this.postContentFile(files);\n      \n    }\n  }\n  postContentFile = async (files) =>{\n    let flagError=false;\n    \n      var formData = new FormData();\n      //formData.set('files', files);\n      console.log(\"entro\", formData)\n      formData.append('files', files[0]);\n      fetch('api/postContentFile', { // Your POST endpoint\n      method: 'POST',\n      body: formData // This is your file object\n      }).catch(function() {\n        console.log(\"error in post data\");\n        flagError=true;\n      });\n    \n    this.getContentFile(files,flagError);\n  }\n\n  getContentFile = async (files,flagError) =>{\n    const response = await fetch('api/getContentFile?name='+files[0].name).catch(function() {\n\t\t\tconsole.log(\"error in get files\");\n\t\t\tflagError=true;\n\t\t\t});\n\t\t\tif(!flagError){\n\t\t\tlet json = await response.json();\n\n\t\t\t\tsetTimeout(() => {\n          var filename = files[0].name;\n          console.log(\"json\",json)\n\n          var key = \"my passphrase;\"\n          // var contentEncrypted = aes256.encrypt(key, contentString);\n          var contentEncrypted = aes256.encrypt(key, json)\n          var nameEncrypted = aes256.encrypt(key, filename);\n          //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n          //\n          /* create file encrypt */\n          var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n          console.log(\"fileEncrypted\",fileEncrypted);\n          var formData = new FormData();\n          //formData.set('files', files);\n          formData.append('files', fileEncrypted);\n          fetch('api/file', { // Your POST endpoint\n            method: 'POST',\n            body: formData // This is your file object\n          })\n\n\t\t\t\t}, 500);\n\t\t\t}\n  }\n\n  selected = (clicked) => {\n    console.log(clicked)\n    if(clicked.isParent){\n      console.log(clicked.children)\n      this.setState({childrens:clicked.children});\n    }else{\n      console.log(\"hoja\")\n    }\n  }\n    \nrender() {\n  const children = [];\n    let auxChildren=this.state.childrens;\n    for (var i = 0; i < auxChildren.length; i += 1) {\n      console.log(auxChildren[i])\n      children.push(<File key={i} number={i} />);\n    };\n    return (\n      <div className=\"App\">\n        \n\n      {/* file */}\n      <Button onClick={this.clickInLoad} color=\"primary\">primary</Button>{' '}\n      <input type=\"file\" id=\"inputUpload\" name=\"files[]\" multiple/> \n\n      <Button onClick={this.callFile} color=\"primary\">call file</Button>{' '}\n      \n      <br></br>\n      <br></br>\n      <CheckboxTree\n        nodes={this.state.nodes}\n        checked={this.state.checked}\n        expanded={this.state.expanded}\n        onCheck={checked => this.setState({ checked })}\n        onExpand={expanded => this.setState({ expanded })}\n        onClick={clicked => this.selected(clicked)}\n      />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}