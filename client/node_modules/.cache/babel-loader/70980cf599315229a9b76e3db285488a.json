{"ast":null,"code":"var fixRange = require('level-fix-range'); //get the first/last record in a range\n\n\nexports = module.exports = peek;\nexports.first = first;\nexports.last = last;\n\nfunction once(emitter, events, listener) {\n  var remove = [];\n  events.forEach(function (e) {\n    function onEvent(arg) {\n      if (listener(e, arg) === false) return;\n      remove.forEach(function (r) {\n        r();\n      });\n    }\n\n    emitter.on(e, onEvent);\n    remove.push(function () {\n      emitter.removeListener(e, onEvent);\n    });\n  });\n  return emitter;\n}\n\nfunction peek(db, opts, cb) {\n  opts.limit = opts.reverse ? 2 : 1;\n  var stream = once(db.createReadStream(opts), ['data', 'error', 'end'], function (event, data) {\n    if (opts.reverse && data && opts.start && data.key.toString() > opts.start) return false;\n    if (event == 'error') cb(data);else if (event == 'end') cb(new Error('range not found'), null, null);else cb(null, data.key, data.value);\n  });\n}\n\nfunction first(db, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = {};\n  }\n\n  opts.reverse = false;\n  return peek(db, fixRange(opts), cb);\n} //SO, this is pretty horrible,\n//but it's works around an issue here\n//https://github.com/rvagg/node-levelup/issues/110\n\n\nfunction last(db, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = {};\n  }\n\n  var start = opts.start;\n  opts.reverse = true;\n  return peek(db, fixRange(opts), function (err, key, value) {\n    if (err) {\n      var _start = opts.start;\n      opts.start = null;\n      peek(db, opts, function (_, key, value) {\n        if (!key) return cb(err, null, null);\n\n        var _key = key.toString();\n\n        if (_key <= _start && (!opts.end || _key >= opts.end)) cb(_, key, value);else cb(err, null, null);\n      });\n    } else cb(err, key, value);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}