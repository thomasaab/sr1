{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Desktop/sr1/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport update, { extend } from 'immutability-helper';\nimport './App.css';\nimport CheckboxTree from 'react-checkbox-tree';\nimport File from \"./File\";\nimport Folder from \"./Folder\";\n\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      childrens: [],\n      aux: \"aux\",\n      modalNewFolder: false,\n      checked: [],\n      expanded: [],\n      key: \"my passphrase;\",\n      here: {},\n      nodes: [{\n        value: 'mars',\n        label: 'Home',\n        children: [{\n          value: 'phobos',\n          label: 'Phobos'\n        }, {\n          value: 'deimos',\n          label: 'Deimos',\n          children: [{\n            value: 'phobos',\n            label: 'Phobos'\n          }, {\n            value: 'deim',\n            label: 'Deim',\n            children: [{\n              value: 'phobos',\n              label: 'Phobos'\n            }, {\n              value: 'deimo',\n              label: 'Deimos3',\n              children: []\n            }]\n          }]\n        }]\n      }]\n    };\n\n    this.sendJson = () => {\n      fetch('api/createFolder', {\n        // Your POST endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.nodes)\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(function () {\n        console.log(\"error in post data\");\n      });\n    };\n\n    this.search = (path, obj, target) => {\n      for (var k in obj) {\n        //console.log(\"k\",k)\n        if (obj.hasOwnProperty(k)) //si esta el atributo k en el objeto\n          if (obj[k] === target) return path + \",\" + k;else if (typeof obj[k] === \"object\") {\n            var result = this.search(path + \",\" + k, obj[k], target);\n            if (result) return result;\n          }\n      }\n\n      return false;\n    };\n\n    this.clickInLoad = () => {\n      document.getElementById(\"inputUpload\").click();\n      let UpdFile = document.getElementById(\"inputUpload\");\n      UpdFile.addEventListener('change', this.handleFileSelect, false);\n    };\n\n    this.callFile = async () => {\n      const response = await fetch('/api/getFile');\n      const body = await response.blob();\n      if (response.status !== 200) throw Error(body.message);\n      let key = \"my passphrase;\";\n      let fileReader = new FileReader();\n\n      fileReader.onloadend = function (e) {\n        let content = aes256.decrypt(key, fileReader.result);\n        console.log(\"contentdes\", content);\n        var fileDown = [];\n        var filename = \"pruba.pdf\";\n        fileDown[0] = content;\n        fileDown[1] = filename;\n        fetch('api/postForDownload', {\n          // Your POST endpoint\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"file\": {\n              \"content\": content,\n              \"name\": filename\n            }\n          }) // This is your file object\n\n        }).catch(function () {\n          console.log(\"error in post data\");\n        }); // download(content,filename,\"js\");\n\n        function download(data, filename, type) {\n          var file = new Blob([data], {\n            type: type\n          });\n          if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);else {\n            // Others\n            var a = document.createElement(\"a\"),\n                url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function () {\n              document.body.removeChild(a);\n              window.URL.revokeObjectURL(url);\n            }, 0);\n          }\n        }\n      };\n\n      fileReader.readAsText(body);\n    };\n\n    this.handleFileSelect = evt => {\n      if (evt.target.files.length > 0) {\n        var files = evt.target.files; // FileList object\n\n        console.log(\"llamo\");\n        this.postContentFile(files);\n      }\n    };\n\n    this.postContentFile = async files => {\n      let flagError = false;\n      var formData = new FormData(); //formData.set('files', files);\n\n      console.log(\"entro\", formData);\n      formData.append('files', files[0]);\n      fetch('api/postContentFile', {\n        // Your POST endpoint\n        method: 'POST',\n        body: formData // This is your file object\n\n      }).catch(function () {\n        console.log(\"error in post data\");\n        flagError = true;\n      });\n      this.getContentFile(files, flagError);\n    };\n\n    this.getContentFile = async (files, flagError) => {\n      const response = await fetch('api/getContentFile?name=' + files[0].name).catch(function () {\n        console.log(\"error in get files\");\n        flagError = true;\n      });\n\n      if (!flagError) {\n        let json = await response.json();\n        setTimeout(() => {\n          var filename = files[0].name;\n          console.log(\"json\", json);\n          var key = \"my passphrase;\"; // var contentEncrypted = aes256.encrypt(key, contentString);\n\n          var contentEncrypted = aes256.encrypt(key, json);\n          var nameEncrypted = aes256.encrypt(key, filename); //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n          //\n\n          /* create file encrypt */\n\n          var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n          console.log(\"fileEncrypted\", fileEncrypted);\n          var formData = new FormData(); //formData.set('files', files);\n\n          formData.append('files', fileEncrypted);\n          fetch('api/file', {\n            // Your POST endpoint\n            method: 'POST',\n            body: formData // This is your file object\n\n          });\n        }, 500);\n      }\n    };\n\n    this.selected = clicked => {\n      if (clicked.isParent) {\n        this.setState({\n          childrens: clicked.children\n        });\n        var objHere = {};\n\n        for (var i = 0; i < clicked.parent.children.length; i++) {\n          if (clicked.parent.children[i].value === clicked.value) {\n            //find parent element\n            objHere = clicked.parent.children[i].value;\n          }\n        }\n\n        this.setState({\n          here: objHere\n        });\n      } else {\n        console.log(\"hoja\");\n      }\n    };\n\n    this.clickInNewFolder = () => {\n      this.setState(prevState => ({\n        modalNewFolder: !prevState.modalNewFolder\n      }));\n    };\n\n    this.createFolder = () => {\n      var newName = document.getElementById(\"newFolder\").value;\n      this.setState(prevState => ({\n        modalNewFolder: !prevState.modalNewFolder\n      }));\n      var path = \"nodes\";\n      path = this.search(path, this.state.nodes, this.state.here);\n      let newObj = {\n        value: aes256.encrypt(this.state.key, newName),\n        label: newName,\n        children: []\n      };\n      let flagFolderHome = false;\n      console.log(\"path\", path);\n      console.log(\"newobj\", newObj);\n      path = path.replace(\"['value']\", \"\");\n      path = path.replace(\"nodes,0,\", \"\");\n\n      if (path.includes('nodes,0')) {\n        flagFolderHome = true;\n      }\n\n      console.log(\"path2\", path);\n      var auxSubPaths = path.split(',');\n      console.log(\"auxSubPaths\", auxSubPaths);\n      var subPaths = \"\";\n      var x = 0;\n\n      for (var i = 0; i < auxSubPaths.length; i++) {\n        if (/^\\d+$/.test(auxSubPaths[i + 1])) {\n          if (i === 0) {\n            subPaths = auxSubPaths[i] + \"[\" + auxSubPaths[i + 1] + \"]\";\n          } else {\n            subPaths = subPaths + \".\" + auxSubPaths[i] + \"[\" + auxSubPaths[i + 1] + \"]\";\n          }\n\n          i++;\n          x++;\n        } //if string is num\n\n      }\n\n      console.log(\"subPaths\", subPaths);\n      var abc = update(this.state.nodes[0], {\n        xyz: {\n          $set: 'foo'\n        }\n      });\n      console.log(\"abc\", abc);\n      this.setState({\n        abc: abc\n      });\n      var data = this.state.nodes[0];\n      console.log(\"subpth\", subPaths);\n\n      if (flagFolderHome) {\n        eval(\"data..children[data.\" + subPaths + \".children.length]= newObj\");\n      } else {\n        eval(\"data.\" + subPaths + \".children[data.\" + subPaths + \".children.length]= newObj\");\n      }\n\n      console.log(\"HOLAAA\", data);\n      console.log(\"data2\", this.state.nodes); //    var axi= this.state.nodes[0]\n      //    console.log(\"subPathsHEY\",subPaths)\n      //    console.log(axi)\n      //    var h = \"[children][1]\"\n      //    console.log(\"FNCIONNAA\", axi[h])\n      //    var obj2={\n      //     \"children['1'].children['1']\": newObj\n      //    }\n      //    obj=this.state.nodes[0]\n      // for(var i in obj2){\n      //     var res = i.split(\".\");\n      //     var fieldName = res.splice(res.length-1,1);\n      //     var objField = res.reduce((r, u) => r && r[u] ? r[u] : '' , obj);\n      //     objField[fieldName]=obj2[i];\n      // }\n      // console.log(\"res\",obj);\n      //  var mods = {\n      //   children: newObj\n      // };\n      // function apply(data, mods) {\n      //   for (var path in mods) {\n      //     var k = data;\n      //     var steps = path.split('.');\n      //     var last = steps.pop();\n      //     steps.forEach(e => (k[e] = k[e] || {}) && (k = k[e]));\n      //     k[last] = mods[path];\n      //   }\n      //   return data\n      // }\n      // console.log(\"result\", apply(this.state.nodes[0], mods))\n      // obj.childrens[obj.childrens.length] = 0;\n    };\n\n    this.changeHere = children => {\n      console.log(\"childrenhere\", children);\n      this.setState({\n        here: children\n      });\n    };\n\n    this.saveJson = children => {\n      fetch('api/saveJson', {\n        // Your POST endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.nodes)\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(function () {\n        console.log(\"error in post data\");\n      });\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"this.state.nodes[0]\");\n    this.setState({\n      here: this.state.nodes[0]\n    });\n  }\n\n  componentDidMount() {// console.log(JSON.stringify(this.state.nodes[0]))\n    // fetch('api/prueba', { // Your POST endpoint\n    //   method: 'POST',\n    //   headers: {'Content-Type': 'application/json'},\n    //   body: JSON.stringify(this.state.nodes)\n    //   })\n    //   .then((response) => response.json())\n    //   .then((data) => {console.log(data)})\n    //   .catch(function() {\n    //     console.log(\"error in post data\");\n    //   });\n  }\n\n  render() {\n    const childrenFolder = [];\n    const childrenFile = [];\n    var flagEmpty = false;\n    console.log(\"here\", this.state.here);\n    let auxChildren = this.state.here.children;\n\n    for (var i = 0; i < auxChildren.length; i += 1) {\n      if (typeof auxChildren[i].children !== \"undefined\") {\n        // ES PADRE (Carpeta)\n        childrenFolder.push(React.createElement(Col, {\n          key: i,\n          className: \"nodeCard\",\n          xs: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, React.createElement(Folder, {\n          number: i,\n          children: auxChildren[i],\n          labelFile: auxChildren[i].label,\n          valueFile: auxChildren[i].label,\n          changeHere: this.changeHere,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        })));\n        flagEmpty = true;\n      } else {\n        //Es un file\n        childrenFile.push(React.createElement(Col, {\n          key: i,\n          className: \"nodeCard\",\n          xs: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, React.createElement(File, {\n          number: i,\n          labelFile: auxChildren[i].label,\n          valueFile: auxChildren[i].label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        })));\n        flagEmpty = true;\n      }\n    }\n\n    ;\n\n    if (!flagEmpty) {\n      childrenFolder.push(React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"Folder Empty\"));\n    }\n\n    childrenFolder.push(childrenFile);\n    return React.createElement(Container, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.clickInNewFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Create Folder\"), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.saveJson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"save\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, childrenFolder))), React.createElement(Modal, {\n      isOpen: this.state.modalNewFolder,\n      toggle: this.clickInNewFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.clickInNewFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Create Folder\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"newFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, \"Name of folder:\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"newFolder\",\n      id: \"newFolder\",\n      placeholder: \"New name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.createFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \"Create\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.clickInNewFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, \"Cancel\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.clickInLoad,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, \"primary\"), ' ', React.createElement(\"input\", {\n      type: \"file\",\n      id: \"inputUpload\",\n      name: \"files[]\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.callFile,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"call file\"), ' ');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/thomas/Desktop/sr1/client/src/App.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","FormText","Container","Row","Col","update","extend","CheckboxTree","File","Folder","aes256","require","App","state","childrens","aux","modalNewFolder","checked","expanded","key","here","nodes","value","label","children","sendJson","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","search","path","obj","target","k","hasOwnProperty","result","clickInLoad","document","getElementById","click","UpdFile","addEventListener","handleFileSelect","callFile","blob","status","Error","message","fileReader","FileReader","onloadend","e","content","decrypt","fileDown","filename","download","type","file","Blob","window","navigator","msSaveOrOpenBlob","a","createElement","url","URL","createObjectURL","href","appendChild","setTimeout","removeChild","revokeObjectURL","readAsText","evt","files","length","postContentFile","flagError","formData","FormData","append","getContentFile","name","contentEncrypted","encrypt","nameEncrypted","fileEncrypted","selected","clicked","isParent","setState","objHere","i","parent","clickInNewFolder","prevState","createFolder","newName","newObj","flagFolderHome","replace","includes","auxSubPaths","split","subPaths","x","test","abc","xyz","$set","eval","changeHere","saveJson","componentWillMount","componentDidMount","render","childrenFolder","childrenFile","flagEmpty","auxChildren","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter , Form, FormGroup, Label, Input, FormText  } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport update, { extend } from 'immutability-helper';\nimport './App.css';\nimport CheckboxTree from 'react-checkbox-tree';\nimport File from \"./File\"\nimport Folder from \"./Folder\"\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  state = {\n    childrens: [],\n    aux:\"aux\",\n    modalNewFolder: false,\n    checked: [],\n    expanded: [],\n    key: \"my passphrase;\",\n    here: {},\n    nodes :[{\n      value: 'mars',\n      label: 'Home',\n      children: [\n        { \n        value: 'phobos', \n        label: 'Phobos' \n        },\n        { \n         value: 'deimos', \n         label: 'Deimos' ,\n         children: [\n          { \n          value: 'phobos', \n          label: 'Phobos' \n          },\n          { \n           value: 'deim', \n           label: 'Deim' ,\n           children: [\n            { \n            value: 'phobos', \n            label: 'Phobos' \n            },\n            { \n             value: 'deimo', \n             label: 'Deimos3',\n             children: []\n             \n            }\n          ]\n           \n          }\n        ]\n        }\n      ]\n    }]\n  };\n  componentWillMount() {\n    console.log(\"this.state.nodes[0]\")\n    this.setState({here:this.state.nodes[0]});\n  }\n\n  componentDidMount() {\n    // console.log(JSON.stringify(this.state.nodes[0]))\n    // fetch('api/prueba', { // Your POST endpoint\n    //   method: 'POST',\n    //   headers: {'Content-Type': 'application/json'},\n    //   body: JSON.stringify(this.state.nodes)\n    //   })\n    //   .then((response) => response.json())\n    //   .then((data) => {console.log(data)})\n    //   .catch(function() {\n    //     console.log(\"error in post data\");\n    //   });\n    \n   \n  }\n\n sendJson = () => {\n  fetch('api/createFolder', { // Your POST endpoint\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(this.state.nodes)\n    })\n    .then((response) => response.json())\n    .then((data) => {console.log(data)})\n    .catch(function() {\n      console.log(\"error in post data\");\n    });\n\n }\n\n search = (path, obj, target) => {\n    for (var k in obj) {\n      //console.log(\"k\",k)\n        if (obj.hasOwnProperty(k))//si esta el atributo k en el objeto\n            if (obj[k] === target)\n                return path + \",\" + k \n            else if (typeof obj[k] === \"object\") {\n                var result = this.search(path + \",\" + k , obj[k], target);\n                if (result)\n                    return result;\n            }\n    }\n    return false;\n}\n\n  clickInLoad = () => {\n    document.getElementById(\"inputUpload\").click();\n    let UpdFile = document.getElementById(\"inputUpload\");\n    UpdFile.addEventListener('change',this.handleFileSelect, false);\n  }\n\n  callFile = async () => {\n    const response = await fetch('/api/getFile');\n    const body = await response.blob();\n    if (response.status !== 200) throw Error(body.message);\n    let key = \"my passphrase;\"\n    let fileReader = new FileReader();\n \n    fileReader.onloadend = function (e){\n\n      let content = aes256.decrypt(key,fileReader.result);\n      console.log(\"contentdes\", content);\n      var fileDown =[];\n      var filename = \"pruba.pdf\";\n      fileDown[0]=content;\n      fileDown[1]=filename;\n      \n      fetch('api/postForDownload', { // Your POST endpoint\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ \"file\": {\n          \"content\" : content,\n          \"name\" : filename\n        }}) // This is your file object\n        }).catch(function() {\n          console.log(\"error in post data\");\n        });\n     // download(content,filename,\"js\");\n     \n      function download(data, filename, type) {\n        var file = new Blob([data], {type: type});\n        if (window.navigator.msSaveOrOpenBlob) // IE10+\n            window.navigator.msSaveOrOpenBlob(file, filename);\n        else { // Others\n            var a = document.createElement(\"a\"),\n                    url = URL.createObjectURL(file);\n            a.href = url;\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            setTimeout(function() {\n                document.body.removeChild(a);\n                window.URL.revokeObjectURL(url);  \n            }, 0); \n        }\n    \n      }\n\n    }\n    fileReader.readAsText(body);\n  };\n\n  handleFileSelect = (evt) => {\n    if(evt.target.files.length>0){\n      var files = evt.target.files; // FileList object\n      console.log(\"llamo\")\n      this.postContentFile(files);\n      \n    }\n  }\n  postContentFile = async (files) =>{\n    let flagError=false;\n    \n      var formData = new FormData();\n      //formData.set('files', files);\n      console.log(\"entro\", formData)\n      formData.append('files', files[0]);\n      fetch('api/postContentFile', { // Your POST endpoint\n      method: 'POST',\n      body: formData // This is your file object\n      }).catch(function() {\n        console.log(\"error in post data\");\n        flagError=true;\n      });\n    \n    this.getContentFile(files,flagError);\n  }\n\n  getContentFile = async (files,flagError) =>{\n    const response = await fetch('api/getContentFile?name='+files[0].name).catch(function() {\n\t\t\tconsole.log(\"error in get files\");\n\t\t\tflagError=true;\n\t\t\t});\n\t\t\tif(!flagError){\n\t\t\tlet json = await response.json();\n\n\t\t\t\tsetTimeout(() => {\n          var filename = files[0].name;\n          console.log(\"json\",json)\n\n          var key = \"my passphrase;\"\n          // var contentEncrypted = aes256.encrypt(key, contentString);\n          var contentEncrypted = aes256.encrypt(key, json)\n          var nameEncrypted = aes256.encrypt(key, filename);\n          //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n          //\n          /* create file encrypt */\n          var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n          console.log(\"fileEncrypted\",fileEncrypted);\n          var formData = new FormData();\n          //formData.set('files', files);\n          formData.append('files', fileEncrypted);\n          fetch('api/file', { // Your POST endpoint\n            method: 'POST',\n            body: formData // This is your file object\n          })\n\n\t\t\t\t}, 500);\n\t\t\t}\n  }\n\n  selected = (clicked) => {\n    if(clicked.isParent){\n      this.setState({childrens:clicked.children});\n      var objHere = {}\n      for (var i =0; i<clicked.parent.children.length; i++){\n        if (clicked.parent.children[i].value === clicked.value){ //find parent element\n          objHere=clicked.parent.children[i].value;\n        }\n      }\n      this.setState({here:objHere});\n    }else{\n      console.log(\"hoja\")\n    }\n  }\n\n  clickInNewFolder= () => {\n    this.setState(prevState => ({\n      modalNewFolder: !prevState.modalNewFolder\n    }));\n  }\n\n  createFolder= () => {\n    var newName = document.getElementById(\"newFolder\").value;\n    this.setState(prevState => ({\n      modalNewFolder: !prevState.modalNewFolder\n    }));\n    var path = \"nodes\";\n    path = this.search(path, this.state.nodes, this.state.here);\n    let newObj = {\n      value: aes256.encrypt(this.state.key, newName),\n      label: newName,\n      children: []\n    }\n    let flagFolderHome = false;\n    console.log(\"path\",path)\n    console.log(\"newobj\", newObj)\n    path = path.replace(\"['value']\",\"\");\n    path = path.replace(\"nodes,0,\",\"\");\n    if(path.includes('nodes,0')){\n      flagFolderHome=true;\n    }\n    console.log(\"path2\",path)\n    var auxSubPaths= path.split(',')\n    console.log(\"auxSubPaths\",auxSubPaths)\n    var subPaths = \"\"\n    var x=0;\n     for(var i=0; i<auxSubPaths.length;i++){\n      if(/^\\d+$/.test(auxSubPaths[i+1])){\n        if(i===0){\n          subPaths=auxSubPaths[i]+\"[\"+auxSubPaths[i+1]+\"]\"\n        }else{\n          subPaths=subPaths+\".\"+auxSubPaths[i]+\"[\"+auxSubPaths[i+1]+\"]\"\n        }\n        \n        i++;\n        x++;\n      } //if string is num\n     }\n\n      console.log(\"subPaths\",subPaths)\n      var abc = update(this.state.nodes[0], {\n        xyz: {$set: 'foo'},\n      });\n      \n     console.log(\"abc\",abc)\n     this.setState({abc: abc});\n\n      var data = this.state.nodes[0];\n      console.log(\"subpth\", subPaths)\n      if(flagFolderHome){\n        eval(\"data..children[data.\"+subPaths+\".children.length]= newObj\")\n      }else{\n        eval(\"data.\"+subPaths+\".children[data.\"+subPaths+\".children.length]= newObj\")\n      }\n\n      console.log(\"HOLAAA\",data)\n      console.log(\"data2\",this.state.nodes)\n\n\n  //    var axi= this.state.nodes[0]\n  //    console.log(\"subPathsHEY\",subPaths)\n  //    console.log(axi)\n  //    var h = \"[children][1]\"\n  //    console.log(\"FNCIONNAA\", axi[h])\n  //    var obj2={\n  //     \"children['1'].children['1']\": newObj\n  //    }\n  //    obj=this.state.nodes[0]\n  \n  // for(var i in obj2){\n  //     var res = i.split(\".\");\n  //     var fieldName = res.splice(res.length-1,1);\n  //     var objField = res.reduce((r, u) => r && r[u] ? r[u] : '' , obj);\n  //     objField[fieldName]=obj2[i];\n  // }\n  // console.log(\"res\",obj);\n     \n    //  var mods = {\n    //   children: newObj\n    // };\n    \n    // function apply(data, mods) {\n    //   for (var path in mods) {\n    //     var k = data;\n    //     var steps = path.split('.');\n    //     var last = steps.pop();\n    //     steps.forEach(e => (k[e] = k[e] || {}) && (k = k[e]));\n    //     k[last] = mods[path];\n    //   }\n    //   return data\n    // }\n    \n    // console.log(\"result\", apply(this.state.nodes[0], mods))\n    // obj.childrens[obj.childrens.length] = 0;\n\n  }\n  changeHere= (children) => {\n    console.log(\"childrenhere\", children)\n   this.setState({here:children})\n  }\n\n  saveJson= (children) => {\n    fetch('api/saveJson', { // Your POST endpoint\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(this.state.nodes)\n      })\n      .then((response) => response.json())\n      .then((data) => {console.log(data)})\n      .catch(function() {\n        console.log(\"error in post data\");\n      });\n   }\n    \nrender() {\n  const childrenFolder = [];\n  const childrenFile = [];\n  var flagEmpty = false;\n\n  console.log(\"here\",this.state.here)\n    let auxChildren=this.state.here.children;\n    for (var i = 0; i < auxChildren.length; i += 1) {\n      \n      if(typeof auxChildren[i].children !== \"undefined\") {  // ES PADRE (Carpeta)\n\n        childrenFolder.push(<Col key={i} className=\"nodeCard\" xs=\"2\"><Folder  number={i}  \n          children={auxChildren[i]}labelFile={auxChildren[i].label} \n          valueFile={auxChildren[i].label} changeHere={this.changeHere} /></Col>);\n        \n        flagEmpty = true;\n      }else{//Es un file\n\n        childrenFile.push(<Col key={i} className=\"nodeCard\" xs=\"2\"><File  number={i}\n         labelFile={auxChildren[i].label} valueFile={auxChildren[i].label}/></Col>);\n        flagEmpty = true;\n      }\n        \n    };\n    if(!flagEmpty){\n      childrenFolder.push(<h2>\n        Folder Empty\n      </h2>)\n    }\n    childrenFolder.push(childrenFile);\n\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Button color=\"primary\" onClick={this.clickInNewFolder}>Create Folder</Button>\n          <Button color=\"primary\" onClick={this.saveJson}>save</Button>\n        </Row>\n        <br></br>\n        <br></br>\n\n        <Row> \n          {/* <Col xs=\"4\">\n            <CheckboxTree\n              nodes={this.state.nodes}\n              checked={this.state.checked}\n              expanded={this.state.expanded}\n              onCheck={checked => this.setState({ checked })}\n              onExpand={expanded => this.setState({ expanded })}\n              onClick={clicked => this.selected(clicked)}\n            />\n          </Col> */}\n          <Col xs=\"8\">\n            <Row>\n            {childrenFolder}\n            </Row>\n          </Col>\n        </Row>\n\n        <Modal isOpen={this.state.modalNewFolder} toggle={this.clickInNewFolder}>\n          <ModalHeader toggle={this.clickInNewFolder}>Create Folder</ModalHeader>\n          <ModalBody>\n          <FormGroup>\n            <Label for=\"newFolder\">Name of folder:</Label>\n            <Input type=\"text\" name=\"newFolder\" id=\"newFolder\" placeholder=\"New name\"/>\n          </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.createFolder}>Create</Button>{' '}\n            <Button color=\"secondary\" onClick={this.clickInNewFolder}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n        \n        {/* file */}\n\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <br></br>\n        <Button onClick={this.clickInLoad} color=\"primary\">primary</Button>{' '}\n        <input type=\"file\" id=\"inputUpload\" name=\"files[]\" multiple/> \n\n        <Button onClick={this.callFile} color=\"primary\">call file</Button>{' '}\n        \n\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}