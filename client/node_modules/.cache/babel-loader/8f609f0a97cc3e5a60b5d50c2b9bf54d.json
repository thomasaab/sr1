{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Desktop/sr1/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.clickInLoad = () => {\n      document.getElementById(\"inputUpload\").click();\n      let UpdFile = document.getElementById(\"inputUpload\");\n      UpdFile.addEventListener('change', this.handleFileSelect, false);\n    };\n\n    this.handleFileChosen = file => {\n      let fileReader = new FileReader();\n\n      fileReader.onloadend = function (e) {\n        console.log(\"file\", file);\n        var content = fileReader.result;\n        console.log(\"result\", content);\n        let view = new Int8Array(content);\n        let contentString = '';\n\n        for (var i = 0; i < view.length; i++) {\n          if (i == 0) {\n            contentString = contentString.concat(view[i].toString());\n          } else {\n            contentString = contentString.concat(\" \" + view[i].toString());\n          }\n        }\n\n        console.log(view);\n        console.log(\"content\", contentString);\n        console.log(\"fileReader\", fileReader);\n        /* encrypt */\n\n        var key = \"my passphrase;\";\n        var contentEncrypted = aes256.encrypt(key, contentString);\n        var nameEncrypted = aes256.encrypt(key, file.name); //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n        //\n\n        /* create file encrypt */\n\n        var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n        console.log(\"fileEncrypted\", fileEncrypted);\n        var formData = new FormData(); //formData.set('files', files);\n\n        formData.append('files', fileEncrypted);\n        fetch('api/file', {\n          // Your POST endpoint\n          method: 'POST',\n          body: formData // This is your file object\n\n        }).catch(function () {\n          console.log(\"error in post data\");\n        });\n      }; //fileReader.readAsBinaryString(file);\n\n\n      fileReader.readAsArrayBuffer(file); //codificar a base 64 \n    };\n\n    this.callFile = async () => {\n      const response = await fetch('/api/getFile');\n      const body = await response.blob();\n      if (response.status !== 200) throw Error(body.message);\n      let key = \"my passphrase;\";\n      let fileReader = new FileReader();\n\n      fileReader.onloadend = function (e) {\n        var content = aes256.decrypt(key, fileReader.result);\n        console.log(\"contentdes\", content);\n        var array = content.split(\" \");\n        let view = new Int8Array(array);\n        console.log('viewarray', view);\n        var filename = \"holaprueba.js\";\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(view));\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n      };\n\n      fileReader.readAsText(body);\n    };\n\n    this.download = (filename, text) => {\n      var element = document.createElement('a');\n      element.setAttribute('href', encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    };\n\n    this.handleFileSelect = evt => {\n      if (evt.target.files.length > 0) {\n        var files = evt.target.files; // FileList object\n        // Loop through the FileList and render image files as thumbnails.\n\n        for (var i = 0; i < files.length; i++) {\n          this.handleFileChosen(files[i]);\n        }\n      }\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Learn React\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.state.responseToPost), React.createElement(Button, {\n      onClick: this.clickInLoad,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"primary\"), ' ', React.createElement(\"input\", {\n      type: \"file\",\n      id: \"inputUpload\",\n      name: \"files[]\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.callFile,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"call file\"), ' ');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/thomas/Desktop/sr1/client/src/App.js"],"names":["React","Component","Button","aes256","require","App","state","response","post","responseToPost","clickInLoad","document","getElementById","click","UpdFile","addEventListener","handleFileSelect","handleFileChosen","file","fileReader","FileReader","onloadend","e","console","log","content","result","view","Int8Array","contentString","i","length","concat","toString","key","contentEncrypted","encrypt","nameEncrypted","name","fileEncrypted","File","formData","FormData","append","fetch","method","body","catch","readAsArrayBuffer","callFile","blob","status","Error","message","decrypt","array","split","filename","element","createElement","setAttribute","encodeURIComponent","style","display","appendChild","removeChild","readAsText","download","text","evt","target","files","callApi","json","handleSubmit","preventDefault","headers","JSON","stringify","setState","componentDidMount","then","res","express","err","render","logo","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nimport logo from './logo.svg';\nimport './App.css';\nlet aes256 = require('aes256');\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: ''\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  clickInLoad = () => {\n    document.getElementById(\"inputUpload\").click();\n    let UpdFile = document.getElementById(\"inputUpload\");\n    UpdFile.addEventListener('change',this.handleFileSelect, false);\n  }\n  \n  handleFileChosen = (file) => {\n    let fileReader = new FileReader();\n    fileReader.onloadend = function (e){\n      console.log(\"file\",file);\n     \n      var content = fileReader.result;\n       console.log(\"result\",content)\n      let view = new Int8Array(content);\n      let contentString = '';\n      for(var i=0;i<view.length;i++){\n        if(i==0){\n          contentString = contentString.concat(view[i].toString())\n        }else{\n          contentString = contentString.concat(\" \" + view[i].toString())\n        }   \n      }\n\n      console.log(view);\n\n      console.log(\"content\",contentString)\n      console.log(\"fileReader\",fileReader)\n      /* encrypt */\n      var key = \"my passphrase;\"\n      var contentEncrypted = aes256.encrypt(key, contentString);\n      var nameEncrypted = aes256.encrypt(key, file.name);\n      //nameEncrypted = nameEncrypted.toString().replace(\":\", \"\\/\");\n      //\n      /* create file encrypt */\n      var fileEncrypted = new File([contentEncrypted], nameEncrypted);\n      console.log(\"fileEncrypted\",fileEncrypted);\n      var formData = new FormData();\n      //formData.set('files', files);\n      formData.append('files', fileEncrypted);\n      fetch('api/file', { // Your POST endpoint\n        method: 'POST',\n        body: formData // This is your file object\n      })\n      .catch(function() {\n        console.log(\"error in post data\");\n      });\n    }\n    //fileReader.readAsBinaryString(file);\n    fileReader.readAsArrayBuffer(file);\n    //codificar a base 64 \n  }\n\n   callFile = async () => {\n    const response = await fetch('/api/getFile');\n    const body = await response.blob();\n    if (response.status !== 200) throw Error(body.message);\n    let key = \"my passphrase;\"\n    let fileReader = new FileReader();\n    fileReader.onloadend = function (e){\n\n      var content = aes256.decrypt(key,fileReader.result);\n      console.log(\"contentdes\", content);\n      var array = content.split(\" \");\n      let view = new Int8Array(array);\n\n      console.log('viewarray', view);\n\n\n      var filename = \"holaprueba.js\";\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(view));\n      element.setAttribute('download', filename);\n\n      element.style.display = 'none';\n      document.body.appendChild(element);\n\n      element.click();\n\n      document.body.removeChild(element);\n      }\n    fileReader.readAsText(body);\n  };\n\n  download = (filename, text) => {\n    var element = document.createElement('a');\n    element.setAttribute('href', encodeURIComponent(text));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}\n\n  handleFileSelect = (evt) => {\n    if(evt.target.files.length>0){\n      var files = evt.target.files; // FileList object\n\n      // Loop through the FileList and render image files as thumbnails.\n      for (var i = 0;i<files.length; i++) {\n        this.handleFileChosen(files[i])\n      }\n    }\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    \n    this.setState({ responseToPost: body });\n  };\n  \nrender() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n\n      {/* file */}\n      <Button onClick={this.clickInLoad} color=\"primary\">primary</Button>{' '}\n      <input type=\"file\" id=\"inputUpload\" name=\"files[]\" multiple/> \n\n      <Button onClick={this.callFile} color=\"primary\">call file</Button>{' '}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}