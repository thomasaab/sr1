{"ast":null,"code":"var events = require('events');\n\nmodule.exports = function () {\n  var listeners = {};\n  var that = new events.EventEmitter();\n\n  that.watch = function (key, cb) {\n    if (!listeners[key]) {\n      listeners[key] = new events.EventEmitter();\n      listeners[key].setMaxListeners(0);\n    }\n\n    if (cb) listeners[key].on('change', cb);\n    return listeners[key];\n  };\n\n  that.watcher = function (key, cb) {\n    var watcher = new events.EventEmitter();\n\n    var onchange = function () {\n      watcher.emit('change', 'change', key);\n    };\n\n    that.watch(key, onchange);\n    if (cb) watcher.on('change', cb);\n\n    watcher.close = function () {\n      that.unwatch(key, onchange);\n    };\n\n    return watcher;\n  };\n\n  that.unwatch = function (key, cb) {\n    if (!listeners[key]) return;\n    if (cb) listeners[key].removeListener('change', cb);else listeners[key].removeAllListeners('change');\n    if (!listeners[key].listeners('change').length) delete listeners[key];\n    ;\n  };\n\n  that.change = function (key) {\n    if (listeners[key]) listeners[key].emit('change');\n    that.emit('change', key);\n  };\n\n  that.cb = function (key, cb) {\n    return function (err, val) {\n      if (key) that.change(key);\n      if (cb) cb(err, val);\n    };\n  };\n\n  return that;\n};","map":null,"metadata":{},"sourceType":"script"}